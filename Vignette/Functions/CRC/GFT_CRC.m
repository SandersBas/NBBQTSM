function GFT = GFT_CRC(theta)
    %% Gains from trade
    %==========================================================================
    % Step 9: computes gains from trade (Table 1)
    %==========================================================================
    
    % Load the data from Step_01_...m. All variables in the loaded data are 
    % "cubes" NxNxS: (i,j,s), except alpha_tilde_sjk3D, which is (SxNxS)
    load Step_01_WIOD_AGG_with_INT.mat % This file is generated by running the script Step_01_WIOD08_agg.m.

    % Construct the matrix "epsilon_s3D" using theta    
    % The fact that we choose the elements [1:11,13,15,19,20,20*ones(1,16)]
    % follows from line 93-95 in the script Step_01_WIOD08_agg.m.
    theta = max(-theta([1:11,13,15,19,20,20*ones(1,16)]),0.37);
    epsilon_s3D = reshape(theta, 1, 1, []);
    epsilon_s3D = repmat(epsilon_s3D, 34, 34, 1);
    
    
    %================== COMPUTE AUXILIARY MATRICES AND CUBES ==================
    % Adjust alphas as  (alpha_new_j,ks=alpha_j,s*e_j,k)
    Xj3D=repmat(sum(Xjs3D,3),[1 1 S]);
    ejs3D=Xjs3D./Xj3D;  % e_j,s in (i,j,s)
    ejk_sjk3D=repmat(ejs3D(1,:,:),[S 1 1]);  %e_j,k in (s,j,k)
    
    idx=find(eye(N));
    Xijs2D=reshape(Xijs3D,N*N,S);	% i,s
    Xiis2D=Xijs2D(idx,:);	% Xii,s in (i,s)
    Xjjs3D=permute(repmat(Xiis2D,[1 1 N]),[3 1 2]);	% Xjj,s in (i,j,s)
    Xjj3D=repmat(sum(Xjjs3D,3),[1 1 S]);		% Xjj in (i,j,s)
    Xj3D=repmat(sum(sum(Xijs3D,3),1),[N 1 S]);	% Xj in (i,j,s)
    Ljj3D=Xjj3D./Xj3D;      % lambda_jj
    Ljjs3D=Xjjs3D./Xjs3D;	% lambda_jj,s in (i,j,s)
    
    betajk_sjk3D=repmat(betajs3D(1,:,:),[S 1 1]);  % beta_jk in (s,j,k)
    epsilon_sjk3D=repmat(reshape(epsilon_s3D(1,1,:),S,1),[1 N S]);	% epsilon_s in (s,j,k)
    Ljjs_sjk3D=permute(repmat(Ljjs3D(1,:,:),[S 1 1]),[3 2 1]);		% Ljjs in (s,j,k)
    betajs_sjk3D=permute(repmat(betajs3D(1,:,:),[S,1,1]),[3 2 1]);
    
    %======================== COMPUTE GAINS FROM TRADE ========================
       
    %=== GT2 ================================
    GT2j3D=1-repmat(prod(Ljjs3D.^(betajs3D./epsilon_s3D),3),[1 1 S]);
    GFT=reshape(GT2j3D(1,:,1),N,1);   
    

end